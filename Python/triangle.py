''' Назначение:
1. Определение длин сторон треугольника по координатам его вершин.
2. Нахождение длины медианы, проведенной из наибольшего угла тругольника.
3. Определение, является ли треугольник равнобедроенным.
4. Определение, лежит ли точка с координатами, заданными пользователем
внутри треугольника. Если да, то нахождения расстояния от этой точки
до наиболее удаленной стороны треугольника или ее продолжения.

Овчинникова Анастасия

Переменные:
xa, ya - координаты первой вершины треугольника (A)
xb, yb - координаты второй вершины треугольника (B)
xc, yc - координаты третьей вершины треугольника (C)
ab - длина AB
bc - длина BC
ac - длина AC
mx - длина наубольшей стороны
m - длина медианы,проведенной из наибольшего угла треугольника
x, y - координаты произвольной точки P
S1 - площадь треугольника с вершной P и стороной AB
S2 - площадь треугольника с вершной P и стороной AC
S3 - площадь треугольника с вершной P и стороной BC
h1 - расстояние от точки P до стороны AB
h2 - расстояние от точки P до стороны AС
h3 - расстояние от точки P до стороны BС'''

from math import sqrt

xa, ya = map(float,input('Введите координаты x и y вершины A \
через пробел: ').split())
xb, yb = map(float,input('Введите координаты x и y вершины B \
через пробел: ').split())
xc, yc = map(float,input('Введите координаты x и y вершины C \
через пробел: ').split())

ab = sqrt(abs(xa-xb)**2 + abs(ya-yb)**2)
bc = sqrt(abs(xb-xc)**2 + abs(yb-yc)**2)
ac = sqrt(abs(xa-xc)**2 + abs(ya-yc)**2)
if ab + bc > ac and ac + bc > ab and ab + ac > bc:
    print ('\nAB =','{:0.2f}'.format(ab), '\nBC =', '{:0.2f}'.format(bc), \
           '\nAC =','{:0.2f}'.format(ac))
    mx = max(ab, bc, ac)
    if mx == ab:
        m = (sqrt(2*(ac**2)+2*(bc**2)-ab**2))
    elif mx == bc:
        m = (sqrt(2*(ac**2)+2*(ab**2)-bc**2))
    else:
        m = (sqrt(2*(ab**2)+2*(bc**2)-ac**2))
        print('\nДлина медианы, проведенной из наибольшего угла, равна '\
          , '{:0.2f}'.format(m))

    if ab == bc or ab == ac or bc == ac:
        print ('\nТреугольник равнобедренный.')
    else:
        print ('\nТреугольник не равнобедренный.')
        
    x, y =  map(float,input('\nВведите координаты x и y произвольной точки P \
через пробел: ').split())
                
    if (((x-xa)*(ya-yb) - (y-ya)*(xa-xb) >= 0) and ((x-xb)*(yb-yc) - (y-yb)*(xb-xc) >= 0) and ((x-xc)*(yc-ya) - (y-ya)*(xc-xa) >= 0)):
        print ('\nТочка лежит внутри исходного треугольника. ')
    elif (((x-xa)*(ya-yb) - (y-ya)*(xa-xb) <= 0) and ((x-xb)*(yb-yc) - (y-yb)*(xb-xc) <= 0) and ((x-xc)*(yc-ya) - (y-ya)*(xc-xa) <= 0)):
        print ('\nТочка лежит внутри исходного треугольника. ')
    else:
        print('\nТочка не лежит внутри исходного треугольника. ')
        
    S1 = abs((xa - x)*(yb - y) - (xb - x)*(ya - y))/2
    S2 = abs((xa - x)*(yc - y) - (xc - x)*(ya - y))/2
    S3 = abs((xb - x)*(yc - y) - (xc - x)*(yb - y))/2
    h1 = 2*S1/ab
    h2 = 2*S2/ac
    h3 = 2*S3/bc
    if h1 >= h2 and h1 >= h3:
        print ('\nРасстояние от точки P до наиболее удаленной стороны \
треугольника = ', '{:0.2f}'.format(h1))
    elif h2 >= h1 and h2 >= h3:
        print('\nРасстояние от точки P до наиболее удаленной стороны \
треугольника = ', '{:0.2f}'.format(h2))
    else:
        print ('\nРасстояние от точки P до наиболее удаленной стороны \
треугольника = ', '{:0.2f}'.format(h3))
    
else:
    print ('\nТреугольник не существует. ')
